#!/usr/bin/env python

"""LICENSE
Copyright 2015 Hermann Krumrey <hermann@krumreyh.com>

This file is part of toktokkie.

toktokkie is free software: you can redistribute it and/or modify
it under the terms of the GNU General Public License as published by
the Free Software Foundation, either version 3 of the License, or
(at your option) any later version.

toktokkie is distributed in the hope that it will be useful,
but WITHOUT ANY WARRANTY; without even the implied warranty of
MERCHANTABILITY or FITNESS FOR A PARTICULAR PURPOSE.  See the
GNU General Public License for more details.

You should have received a copy of the GNU General Public License
along with toktokkie.  If not, see <http://www.gnu.org/licenses/>.
LICENSE"""

import argparse
from xdcc_dl.helper import set_logging_level, set_throttle_value
from toktokkie import Directory
from toktokkie.xdcc_update.XDCCUpdater import XDCCUpdater
from toktokkie.exceptions import MissingXDCCInstructions, \
    InvalidXDCCInstructions, InvalidMetadata, MissingMetadata


def main():
    """
    The xdcc-dl main method
    :return: None
    """
    parser = argparse.ArgumentParser()
    parser.add_argument("directories", nargs="+",
                        help="The directories to update. "
                             "Files and directories that do not contain any "
                             "valid metadata configuration will be ignored.")
    parser.add_argument("-v", "--verbose", action="store_true",
                        help="Sets the verbosity of the program to INFO")
    parser.add_argument("-d", "--debug", action="store_true",
                        help="Sets the verbosity of the program to DEBUG")
    parser.add_argument("-q", "--quiet", action="store_true",
                        help="Disables all output")
    parser.add_argument("-t", "--throttle",
                        help="Limits the download speed of xdcc-dl. "
                             "Append K,M or G for more convenient units")
    parser.add_argument("--create", action="store_true",
                        help="If this flag is set, "
                             "will generate new xdcc update instructions")
    args = parser.parse_args()

    for path in args.directories:

        try:
            directory = Directory(path)

            if args.create:
                XDCCUpdater.prompt(directory.metadata)
            else:
                set_logging_level(args.quiet, args.verbose, args.debug)
                set_throttle_value(args.throttle)
                directory.xdcc_update()
                
        except MissingXDCCInstructions:
            print("No XDCC update instructions for {}".format(path))
        except InvalidXDCCInstructions:
            print("Invalid XDCC update instructions for {}".format(path))
        except MissingMetadata:
            print("{} has no metadata file.".format(path))
        except InvalidMetadata:
            print("{}'s metadata is invalid.".format(path))


if __name__ == "__main__":
    try:
        main()
    except KeyboardInterrupt:
        print("Thanks for using toktokkie!")
