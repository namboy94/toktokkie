#!/usr/bin/env python

"""
Copyright 2015-2018 Hermann Krumrey <hermann@krumreyh.com>

This file is part of toktokkie.

toktokkie is free software: you can redistribute it and/or modify
it under the terms of the GNU General Public License as published by
the Free Software Foundation, either version 3 of the License, or
(at your option) any later version.

toktokkie is distributed in the hope that it will be useful,
but WITHOUT ANY WARRANTY; without even the implied warranty of
MERCHANTABILITY or FITNESS FOR A PARTICULAR PURPOSE.  See the
GNU General Public License for more details.

You should have received a copy of the GNU General Public License
along with toktokkie.  If not, see <http://www.gnu.org/licenses/>.
"""

import sys
import argparse
from colorama import Fore, Style
from toktokkie import Directory
from toktokkie.renaming import Plex, Renamer, TVDB
from toktokkie.metadata import AnimeSeries
from toktokkie.exceptions import InvalidMetadataException, \
    MissingMetadataException


def main():
    """
    The toktokkie-anime-checker main method
    :return: None
    """
    parser = argparse.ArgumentParser()
    parser.add_argument("directories", nargs="+",
                        help="The directories to check.")
    parser.add_argument("-u", "--mal-username",
                        help="Your myanimelist.net username")
    args = parser.parse_args()

    for path in args.directories:
        try:

            directory = Directory(path)
            metadata = AnimeSeries.from_json_file(directory.metadata_file)
            renamer = Renamer(path, metadata, Plex, TVDB)
            episodes = renamer.episodes

            valid = True
            longest = len(max(episodes, key=lambda x: len(x.current)).current)

            for episode in episodes:
                if episode.current != episode.new:

                    if valid:
                        print("Invalid Episodes [" + metadata.name + "]:")

                    print(Fore.LIGHTMAGENTA_EX +
                          episode.current.ljust(longest + 1) + Style.RESET_ALL +
                          " !=   " + Fore.LIGHTBLUE_EX + episode.new +
                          Style.RESET_ALL)
                    valid = False

            if not valid:
                print("Suggestion:")
                renamer.rename(False)

        except (InvalidMetadataException, MissingMetadataException):
            print("Invalid Metadata")
            sys.exit(1)


if __name__ == "__main__":
    try:
        main()
    except KeyboardInterrupt:
        print("Thanks for using toktokkie!")
