#!/usr/bin/env python

"""
Copyright 2015-2018 Hermann Krumrey <hermann@krumreyh.com>

This file is part of toktokkie.

toktokkie is free software: you can redistribute it and/or modify
it under the terms of the GNU General Public License as published by
the Free Software Foundation, either version 3 of the License, or
(at your option) any later version.

toktokkie is distributed in the hope that it will be useful,
but WITHOUT ANY WARRANTY; without even the implied warranty of
MERCHANTABILITY or FITNESS FOR A PARTICULAR PURPOSE.  See the
GNU General Public License for more details.

You should have received a copy of the GNU General Public License
along with toktokkie.  If not, see <http://www.gnu.org/licenses/>.
"""

import os
import sys
import argparse
from toktokkie.metadata import Base
from toktokkie.metadata import get_metadata_types


def main():
    """
    The toktokkie-metadata-gen main method
    :return: None
    """
    media_types = list(map(lambda x: x.type, get_metadata_types()))

    parser = argparse.ArgumentParser()
    parser.add_argument("directory",
                        help="The directory for which to generate "
                             "a metadata file for")
    parser.add_argument("media_type", choices=set(media_types),
                        help="The media type of the metadata")
    args = parser.parse_args()

    directory = args.directory
    media_type = args.media_type
    metadata_class = list(filter(
        lambda x: x.type == media_type,
        get_metadata_types()
    ))[0]

    meta_dir = os.path.join(directory, ".meta")
    meta_file = os.path.join(meta_dir, "info.json")
    if os.path.isfile(meta_file):
        prompt = input("Metadata File already exists. "
                       "Continuing will delete the previous data. "
                       "Continue? (y/n)")
        if prompt != "y":
            print("aborting")
            sys.exit(0)

    metadata = metadata_class.generate_from_prompts(directory)  # type: Base

    if not os.path.isdir(meta_dir):
        os.makedirs(meta_dir)
    metadata.write(meta_file)


if __name__ == "__main__":
    main()
