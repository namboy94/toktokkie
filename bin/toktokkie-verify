#!/usr/bin/env python

"""LICENSE
Copyright 2015 Hermann Krumrey <hermann@krumreyh.com>

This file is part of toktokkie.

toktokkie is free software: you can redistribute it and/or modify
it under the terms of the GNU General Public License as published by
the Free Software Foundation, either version 3 of the License, or
(at your option) any later version.

toktokkie is distributed in the hope that it will be useful,
but WITHOUT ANY WARRANTY; without even the implied warranty of
MERCHANTABILITY or FITNESS FOR A PARTICULAR PURPOSE.  See the
GNU General Public License for more details.

You should have received a copy of the GNU General Public License
along with toktokkie.  If not, see <http://www.gnu.org/licenses/>.
LICENSE"""

import argparse
from toktokkie.verification import get_all_verificator_attributes
from toktokkie import Directory
from toktokkie.exceptions import MissingMetadataException


def main():
    """
    The main method of this script
    :return: None
    """
    parser = argparse.ArgumentParser()
    parser.add_argument("directories", nargs="+",
                        help="The directories to verify")

    for attribute, info in get_all_verificator_attributes().items():

        if info["type"] == bool:
            parser.add_argument("--" + attribute,
                                action="store_true", help=info["help"])

        elif "choices" in info:

            if "default" in info:
                parser.add_argument("--" + attribute, choices=info["choices"],
                                    default=info["default"],
                                    type=info["type"], help=info["help"])

            else:
                parser.add_argument("--" + attribute, choices=info["choices"],
                                    type=info["type"], help=info["help"])

        else:
            parser.add_argument("--" + attribute,
                                type=info["type"], help=info["help"])

    args = parser.parse_args()
    argvars = vars(args)
    directories = args.directories
    attributes = {}

    for attribute, info in get_all_verificator_attributes().items():
        arg = argvars[attribute] if attribute in argvars else None
        if arg is not None and arg is not False:
            attributes[attribute] = arg

    for path in directories:
        try:
            directory = Directory(path)
            print(directory.metadata.name)
            directory.verify(attributes)
        except MissingMetadataException:
            print("Missing Metadata for " + path)


if __name__ == "__main__":
    main()
